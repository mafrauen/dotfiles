#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
prompt pure

alias spot_stop='sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search && killall SystemUIServer'
alias spot_start='sudo chmod 755 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search && killall SystemUIServer'

alias mvim='nocorrect mvim'
alias vvim='mvim -v'
alias ag='nocorrect ag'

alias cel="./manage.py celeryd -l INFO --settings=bitbucket.settings.dev"
alias gun="./manage.py gunserver -b 0.0.0.0:8000"
alias gunn="./manage.py gunserver -b 0.0.0.0:7639 -w 1 -k sync"
alias run="./manage.py runserver 0.0.0.0:8000"
alias mon="python -c 'import conf.monitor; conf.monitor.start()
while True: pass'"
alias gunhg="gunicorn --bind 0.0.0.0:8002 --config conf/debug.conf.py --timeout 120 bridgehgweb:application"
alias gungit='gunicorn -c conf/gunicorn-gitweb.conf.py -b 0:8004 gitweb:application'
alias bb="cd ~/bitbucket && workon bb"
alias bbcel="bb && cel"
alias bbgun="bb && gun"
alias bbgunhg="bb && gunhg"
alias bbgungit="bb && gungit"

alias redshift="psql -h atl-analytics.comrzxo8y7f8.us-east-1.redshift.amazonaws.com -p 5439 dev"

alias mvnaid="mvn clean install -Dmaven.test.skip"

alias pin='pip install --upgrade --no-deps'
alias pmp='python manage.py'

alias add_flag='python manage.py datamigration bb'

alias ie9_css='./manage.py collectstatic --settings=settings.dev --noinput && 
./manage.py compress --settings=settings.dev --force && 
sed -i "" -e "s/\(TEMPLATE_DEBUG = \)True/\1False/" settings/dev.py && 
sed -i "" -e "s/\(COMPRESS_ENABLED = \)False/\1True/" settings/dev.py && 
sed -i "" -e "s/\(COMPRESS_OFFLINE = \)True/\1False/" settings/dev.py && 
sed -i "" -e "s/\(STATIC_DEBUG = \)True/\1False/" settings/dev.py'
alias dev_css='sed -i "" -e "s/\(TEMPLATE_DEBUG = \)False/\1True/" settings/dev.py && 
sed -i "" -e "s/\(COMPRESS_ENABLED = \)True/\1False/" settings/dev.py && 
sed -i "" -e "s/\(COMPRESS_OFFLINE = \)False/\1True/" settings/dev.py && 
sed -i "" -e "s/\(STATIC_DEBUG = \)False/\1True/" settings/dev.py'

wiki() {
  dig +short txt $1.wp.dg.cx
}

saytest() {
  curl http://hubot.ash-private.bitbucket.org:3333/hubot/say -G --data-urlencode "test=$*"
}

saybb() {
  curl http://hubot.ash-private.bitbucket.org:3333/hubot/say -G --data-urlencode "bb=$*"
}

giffy() {
  if [[ -n "$1"  ]]; then
    if [[ $2 == '--good'  ]]; then
      ffmpeg -i $1 -r 10 -vcodec png out-static-%05d.png
      time convert -verbose +dither -layers Optimize -resize 600x600\> out-static*.png  GIF:- | gifsicle --colors 128 --delay=5 --loop --optimize=3 --multifile - > $1.gif
      rm out-static*.png
    else
      ffmpeg -i $1 -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > $1.gif
    fi
  else
    echo "proper usage: gifify <input_movie.mov>. You DO need to include extension."
  fi
}

encode() {
  local mime=`file --mime-type $1 | cut -d\: -f2- | cut -d\  -f2`
  local b64=`openssl base64 < $1 | tr -d '\n'`
  echo 'data:'$mime';base64,'$b64 | tr -d '\n' | pbcopy
}

alias -g outv="| mvim -R -"

jira() {
  local key=`git symbolic-ref HEAD | awk 'match($0, /BB-[0-9]+/) { printf "%s",substr($0, RSTART, RLENGTH) }'`
  open https://bitbucket.atlassian.net/browse/$key
}
