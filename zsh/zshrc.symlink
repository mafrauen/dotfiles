#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
. $HOME/.pure

alias spot_stop='sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search && killall SystemUIServer'
alias spot_start='sudo chmod 755 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search && killall SystemUIServer'

alias mvim='nocorrect mvim'
alias vvim='mvim -v'
alias ag='nocorrect ag'

alias cel="./manage.py celeryd -l INFO --settings=bitbucket.settings.dev"
alias gun="./manage.py gunserver -b 0.0.0.0:8000"
alias gunhg="gunicorn --bind 0.0.0.0:8002 --config conf/debug.conf.py --timeout 120 bridgehgweb:application"
alias gungit='gunicorn -c conf/gunicorn-gitweb.conf.py -b 0:8004 gitweb:application'
alias bbcel="cd ~/bitbucket && workon bb && cel"
alias bbgun="cd ~/bitbucket && workon bb && gun"
alias bbgunhg="cd ~/bitbucket && workon bb && gunhg"
alias bbgungit="cd ~/bitbucket && workon bb && gungit"

alias pin='pip install --upgrade --no-deps'
alias pmp='python manage.py'

alias add_flag='python manage.py datamigration bb'

alias ie9_css='./manage.py collectstatic --settings=settings.dev --noinput && 
./manage.py compress --settings=settings.dev --force && 
sed -i "" -e "s/\(TEMPLATE_DEBUG = \)True/\1False/" settings/dev.py && 
sed -i "" -e "s/\(COMPRESS_ENABLED = \)False/\1True/" settings/dev.py && 
sed -i "" -e "s/\(COMPRESS_OFFLINE = \)True/\1False/" settings/dev.py && 
sed -i "" -e "s/\(STATIC_DEBUG = \)False/\1True/" settings/dev.py'
alias dev_css='sed -i "" -e "s/\(TEMPLATE_DEBUG = \)False/\1True/" settings/dev.py && 
sed -i "" -e "s/\(COMPRESS_ENABLED = \)True/\1False/" settings/dev.py && 
sed -i "" -e "s/\(COMPRESS_OFFLINE = \)False/\1True/" settings/dev.py && 
sed -i "" -e "s/\(STATIC_DEBUG = \)True/\1False/" settings/dev.py'

wiki() {
  dig +short txt $1.wp.dg.cx
}

saytest() {
  curl http://hubot.ash-private.bitbucket.org:3333/hubot/say -G --data-urlencode "test=$*"
}

saybb() {
  curl http://hubot.ash-private.bitbucket.org:3333/hubot/say -G --data-urlencode "bb=$*"
}

giffy() {
  ffmpeg -i $1 -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=10 > $2
}

encode() {
  local mime=`file --mime-type $1 | cut -d\: -f2- | cut -d\  -f2`
  local b64=`openssl base64 < $1 | tr -d '\n'`
  echo 'data:'$mime';base64,'$b64 | tr -d '\n' | pbcopy
}

alias -g outv="| mvim -R -"
